////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : OPERATE.vf
// /___/   /\     Timestamp : 11/14/2021 16:43:24
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog D:/Workers/Xilinx/Lab09/OPERATE.vf -w D:/Workers/Xilinx/Lab09/OPERATE.sch
//Design Name: OPERATE
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale  100 ps / 10 ps

module ADD8_HXILINX_OPERATE (CO, OFL, S, A, B, CI);


   output 	      CO;
   output 	      OFL;
   output [7:0]       S;

   input  [7:0]       A;
   input  [7:0]       B;
   input              CI;

   assign   {CO, S} = A + B + CI;
   assign   OFL     = ( A[7] & B[7] & (~S[7])) | ((~A[7]) & (~B[7]) & S[7]);

endmodule
`timescale  100 ps / 10 ps

module INV8_HXILINX_OPERATE (O, I);
    

   output [7:0] O;

   input  [7:0] I;

assign O = ~I;
endmodule
`timescale 1ns / 1ps

module SHIFTBIT_MUSER_OPERATE(INPUT, 
                              OUTPUT);

    input [7:0] INPUT;
   output [7:0] OUTPUT;
   
   wire [7:0] N;
   
   (* HU_SET = "XLXI_2_33" *) 
   INV8_HXILINX_OPERATE  XLXI_2 (.I(INPUT[7:0]), 
                                .O(N[7:0]));
   INV  XLXI_5_0 (.I(N[0]), 
                 .O(OUTPUT[1]));
   INV  XLXI_5_1 (.I(N[1]), 
                 .O(OUTPUT[2]));
   INV  XLXI_5_2 (.I(N[2]), 
                 .O(OUTPUT[3]));
   INV  XLXI_5_3 (.I(N[3]), 
                 .O(OUTPUT[4]));
   INV  XLXI_5_4 (.I(N[4]), 
                 .O(OUTPUT[5]));
   INV  XLXI_5_5 (.I(N[5]), 
                 .O(OUTPUT[6]));
   INV  XLXI_5_6 (.I(N[6]), 
                 .O(OUTPUT[7]));
   GND  XLXI_6 (.G(OUTPUT[0]));
   GND  XLXI_7 (.G(N[7]));
endmodule
`timescale 1ns / 1ps

module ExOr_MUSER_OPERATE(A, 
                          B, 
                          S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   
   XOR2  XLXI_1_0 (.I0(B[0]), 
                  .I1(A[0]), 
                  .O(S[0]));
   XOR2  XLXI_1_1 (.I0(B[1]), 
                  .I1(A[1]), 
                  .O(S[1]));
   XOR2  XLXI_1_2 (.I0(B[2]), 
                  .I1(A[2]), 
                  .O(S[2]));
   XOR2  XLXI_1_3 (.I0(B[3]), 
                  .I1(A[3]), 
                  .O(S[3]));
   XOR2  XLXI_1_4 (.I0(B[4]), 
                  .I1(A[4]), 
                  .O(S[4]));
   XOR2  XLXI_1_5 (.I0(B[5]), 
                  .I1(A[5]), 
                  .O(S[5]));
   XOR2  XLXI_1_6 (.I0(B[6]), 
                  .I1(A[6]), 
                  .O(S[6]));
   XOR2  XLXI_1_7 (.I0(B[7]), 
                  .I1(A[7]), 
                  .O(S[7]));
endmodule
`timescale 1ns / 1ps

module ADD_MUSER_OPERATE(A, 
                         B, 
                         S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   wire XLXN_1;
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_34" *) 
   ADD8_HXILINX_OPERATE  XLXI_1 (.A(A[7:0]), 
                                .B(B[7:0]), 
                                .CI(XLXN_1), 
                                .CO(XLXN_2), 
                                .OFL(XLXN_2), 
                                .S(S[7:0]));
   GND  XLXI_3 (.G(XLXN_1));
   GND  XLXI_4 (.G(XLXN_2));
endmodule
`timescale 1ns / 1ps

module SUB_MUSER_OPERATE(A, 
                         B, 
                         S);

    input [7:0] A;
    input [7:0] B;
   output [7:0] S;
   
   wire [7:0] XLXN_3;
   wire XLXN_5;
   wire XLXN_6;
   
   (* HU_SET = "XLXI_1_35" *) 
   ADD8_HXILINX_OPERATE  XLXI_1 (.A(A[7:0]), 
                                .B(XLXN_3[7:0]), 
                                .CI(XLXN_5), 
                                .CO(XLXN_6), 
                                .OFL(XLXN_6), 
                                .S(S[7:0]));
   (* HU_SET = "XLXI_2_36" *) 
   INV8_HXILINX_OPERATE  XLXI_2 (.I(B[7:0]), 
                                .O(XLXN_3[7:0]));
   VCC  XLXI_3 (.P(XLXN_5));
   GND  XLXI_4 (.G(XLXN_6));
endmodule
`timescale 1ns / 1ps

module OPERATE(A, 
               B, 
               E, 
               Q, 
               R, 
               W);

    input [7:0] A;
    input [7:0] B;
   output [7:0] E;
   output [7:0] Q;
   output [7:0] R;
   output [7:0] W;
   
   
   ADD_MUSER_OPERATE  XLXI_5 (.A(A[7:0]), 
                             .B(B[7:0]), 
                             .S(Q[7:0]));
   SUB_MUSER_OPERATE  XLXI_7 (.A(A[7:0]), 
                             .B(B[7:0]), 
                             .S(W[7:0]));
   ExOr_MUSER_OPERATE  XLXI_9 (.A(A[7:0]), 
                              .B(B[7:0]), 
                              .S(E[7:0]));
   SHIFTBIT_MUSER_OPERATE  XLXI_10 (.INPUT(A[7:0]), 
                                   .OUTPUT(R[7:0]));
endmodule
